{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/changeDateEvents.js","components/actions/events.js","components/actions/auth.js","components/ui/NavBar.js","helpers/calendar-change.js","components/calendar/CalendarEvent.js","components/actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewButton.js","components/ui/DeleteEventButton.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/auth/LoadingScreen.js","routers/AppRouter.js","components/reducers/uiReducer.js","components/reducers/calendarReducer.js","components/reducers/authReducer.js","components/reducers/rootReducers.js","components/store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","changeDateEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventUpdate","eventDelete","eventLoaded","login","user","checkingFinish","startLogout","dispatch","clear","logout","NavBar","useDispatch","word","name","useSelector","state","auth","className","toUpperCase","slice","onClick","console","log","messages","previous","next","showMore","total","CalendarEvent","title","uiOpenModal","setError","err","removeError","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","useState","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","settitleValid","formValues","setformValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","resp","json","ok","msg","getState","uid","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewButton","DeleteEventButton","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","setItem","view","useForm","initialState","values","setValues","reset","LoginScreen","email","password","msgError","validator","isEmail","Date","getTime","startLogin","autoFocus","to","RegisterScreen","password2","startRegister","AuthRouter","exact","path","component","PrivateRoute","isLogged","Component","rest","props","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","LoadingScreen","AppRouter","disptach","checking","inicialState","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8bdb257.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n\n  const token = localStorage.getItem('token') || '';\n\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n","export const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n  uiSetError: '[ui] Set Error',\n  uiRemoveError: '[ui] Remove Error',\n\n  eventSetActive: '[event] Set active',\n  eventAddNew: '[event] Add new',\n  eventClearActive: '[event] Clear event',\n  eventUpdate: '[event] Event update',\n  eventDelete: '[event] Event delete',\n  eventLoaded: '[event] Events loaded',\n  eventLogout: '[event] Event logout',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authTokenReNew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n};\n","import moment from 'moment';\nexport const changeDateEvents = (events = []) => {\n  return events.map((e) => ({\n    ...e,\n    end: moment(e.end).toDate(),\n    start: moment(e.start).toDate(),\n  }));\n};\n","import { types } from '../../types/types';\nimport { fetchWithToken } from '../../helpers/fetch';\nimport { changeDateEvents } from '../../helpers/changeDateEvents';\nimport Swal from 'sweetalert2';\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchWithToken('events', event, 'POST');\n\n      const body = await resp.json();\n\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          uid,\n          name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdate(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdate = (event) => ({\n  type: types.eventUpdate,\n  payload: event,\n});\n\nexport const eventStartDelete = (event) => {\n  return async (dispatch, getState) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, {}, 'DELETE');\n\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDelete(event));\n        console.log(event);\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDelete = (event) => ({\n  type: types.eventDelete,\n  payload: event,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('events');\n\n      const body = await resp.json();\n\n      const events = changeDateEvents(body.events);\n\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n","import { fetchWithoutToken, fetchWithToken } from '../../helpers/fetch';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchWithoutToken(\n      'auth/login',\n      { email, password },\n      'POST'\n    );\n\n    const body = await resp.json();\n\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchWithoutToken(\n      'auth/register',\n      { name, email, password },\n      'POST'\n    );\n\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (disptach) => {\n    const resp = await fetchWithToken('auth/renew');\n\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      disptach(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      disptach(checkingFinish());\n    }\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(logout());\n    dispatch(eventLogout());\n  };\n};\n\nexport const logout = () => ({\n  type: types.authLogout,\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../actions/auth';\n\nexport const NavBar = () => {\n  const dispatch = useDispatch();\n\n  function capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n  }\n  const { name } = useSelector((state) => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    console.log('click');\n  };\n\n  return (\n    <div className='calendar_navbar-container'>\n      <div className='calendar_navbar-container_name'>\n        <span>{capitalize(name)}</span>\n      </div>\n      <div className='calendar_navbar-container_button'>\n        <button className='navbar-btn' onClick={handleLogout}>\n          <i className='fas fa-sign-out-alt'></i>\n          <span>Logout</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n","export const messages = {\n  previous: '<',\n  next: '>',\n\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  const {\n    title,\n    user: { name },\n  } = event;\n  return (\n    <div>\n      <strong>{title}</strong>\n      <br />\n      <span>- {name}</span>\n    </div>\n  );\n};\n","import { types } from '../../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n\nexport const setError = (err) => ({\n  type: types.uiSetError,\n  payload: err,\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError,\n});\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiCloseModal } from '../actions/ui';\nimport {\n  eventStartAddNew,\n  eventClearActive,\n  eventStartUpdate,\n} from '../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\n\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const dispatch = useDispatch();\n\n  const { modalOpen } = useSelector((state) => state.ui);\n\n  const { activeEvent } = useSelector((state) => state.calendar);\n\n  const [dateStart, setdateStart] = useState(now.toDate());\n\n  const [dateEnd, setdateEnd] = useState(nowPlus1.toDate());\n\n  const [titleValid, settitleValid] = useState(true);\n\n  const [formValues, setformValues] = useState(initEvent);\n\n  useEffect(() => {\n    if (activeEvent) {\n      setformValues({ ...activeEvent });\n    } else {\n      setformValues(initEvent);\n    }\n  }, [activeEvent, setformValues]);\n\n  const handleInputChange = ({ target }) => {\n    setformValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const { title, notes, start, end } = formValues;\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    setformValues(initEvent);\n    dispatch(eventClearActive());\n  };\n\n  const handleDateStartChange = (e) => {\n    setdateStart(e);\n    setformValues({\n      ...formValues,\n      start: e,\n    });\n  };\n\n  const handleDateEndChange = (e) => {\n    setdateEnd(e);\n    setformValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      return Swal.fire(\n        'Error',\n        'The end date must be higher than the start date'\n      );\n    }\n\n    if (title.trim().length < 2) {\n      return settitleValid(false);\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n\n    settitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className='modal'\n      overlayClassName='modal-fondo'\n    >\n      <h1> {activeEvent ? 'Edit event' : 'New event'} </h1>\n      <hr />\n      <form className='container' onSubmit={handleSubmit}>\n        <div className='form-group'>\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleDateStartChange}\n            value={dateStart}\n            className='form-control'\n          />\n        </div>\n\n        <div className='form-group'>\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleDateEndChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className='form-control'\n          />\n        </div>\n\n        <hr />\n        <div className='form-group'>\n          <label>Titulo y notas</label>\n          <input\n            type='text'\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder='Título del evento'\n            name='title'\n            value={title}\n            onChange={handleInputChange}\n            autoComplete='off'\n          />\n          <small id='emailHelp' className='form-text text-muted'>\n            Una descripción corta\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            type='text'\n            className='form-control'\n            placeholder='Notas'\n            rows='5'\n            name='notes'\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id='emailHelp' className='form-text text-muted'>\n            Información adicional\n          </small>\n        </div>\n\n        <button type='submit' className='btn btn-outline-primary btn-block'>\n          <i className='far fa-save'></i>\n          <span> Guardar</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\n\nexport const AddNewButton = () => {\n  const dispatch = useDispatch();\n\n  const AddEventClick = () => {\n    dispatch(uiOpenModal());\n  };\n\n  return (\n    <button onClick={AddEventClick} className='btn btn-primary float-btn'>\n      <i className='fas fa-plus'></i>\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventStartDelete } from '../actions/events';\n\nexport const DeleteEventButton = () => {\n  const dispatch = useDispatch();\n  const { activeEvent } = useSelector((state) => state.calendar);\n  console.log(activeEvent);\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete(activeEvent));\n  };\n\n  return (\n    <button\n      onClick={handleDelete}\n      className='btn btn-danger btn-float-delete pointer'\n    >\n      <i className=' fas fa-trash '></i>\n      <span> Delete</span>\n    </button>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NavBar } from '../ui/NavBar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport { messages } from '../../helpers/calendar-change';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport {\n  eventSetActive,\n  eventClearActive,\n  eventStartLoading,\n} from '../actions/events';\nimport { AddNewButton } from '../ui/AddNewButton';\nimport { DeleteEventButton } from '../ui/DeleteEventButton';\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDobleClick = () => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelect = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const onSelectedSlot = (e) => {\n    dispatch(eventClearActive());\n  };\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor:\n        uid === event.user._id ? 'rgb(123, 123, 123)' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'black',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className='calendar-container'>\n      <NavBar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor='start'\n        endAccessor='end'\n        messages={messages}\n        eventPropGetter={eventStyleGetter}\n        components={{ event: CalendarEvent }}\n        onDoubleClickEvent={onDobleClick}\n        onSelectEvent={onSelect}\n        onSelectSlot={onSelectedSlot}\n        selectable={true}\n        onView={onViewChange}\n        view={lastView}\n      />\n\n      <AddNewButton />\n\n      {activeEvent && <DeleteEventButton />}\n\n      <CalendarModal />\n    </div>\n  );\n};\n","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogin } from '../actions/auth';\nimport validator from 'validator';\nimport { setError, removeError } from '../actions/ui';\n\nexport const LoginScreen = () => {\n  const initialForm = {\n    email: '',\n    password: '',\n  };\n\n  const [formValues, handleInputChange] = useForm(initialForm);\n\n  const { email, password } = formValues;\n\n  const dispatch = useDispatch();\n\n  const isFormValid = () => {\n    if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password.length < 6) {\n      dispatch(setError('Password should be at least 6 characters'));\n      return false;\n    }\n    dispatch(removeError());\n    return true;\n  };\n\n  const { msgError } = useSelector((state) => state.ui);\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startLogin(email, password));\n    }\n  };\n\n  return (\n    <div className='auth-container'>\n      <div className='auth-container_div'>\n        <h3 className='auth-container_title'>Sign in to CalendarApp</h3>\n        <form className='auth-container_form ' onSubmit={handleLogin}>\n          <input\n            className='auth-container_input'\n            type='text'\n            placeholder='Email'\n            autoFocus\n            autoComplete='off'\n            name='email'\n            value={email}\n            onChange={handleInputChange}\n          />\n          {msgError === 'Email is not valid' && (\n            <p className='auth__alert-error'>{msgError}</p>\n          )}\n          <input\n            className='auth-container_input'\n            type='password'\n            placeholder='Password'\n            autoComplete='off'\n            name='password'\n            value={password}\n            onChange={handleInputChange}\n          />\n          {msgError === 'Password should be at least 6 characters' && (\n            <p className='auth__alert-error'>{msgError}</p>\n          )}\n          <button className='auth-btn pointer ' type='submit'>\n            Sign in\n          </button>\n        </form>\n\n        <div className='auth-container_div-redirect '>\n          <p>You do not have an account?</p>\n          <Link className='links-auth pointer' to='/auth/register'>\n            Sign up\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setError, removeError } from '../actions/ui';\nimport validator from 'validator';\nimport { startRegister } from '../actions/auth';\n\nexport const RegisterScreen = () => {\n  const initialForm = {\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  };\n\n  const [formValues, handleInputChange] = useForm(initialForm);\n\n  const { name, email, password, password2 } = formValues;\n\n  const dispatch = useDispatch();\n\n  const isFormValid = () => {\n    if (name.trim().length <= 0) {\n      dispatch(setError('Name is required'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password !== password2 || password.length < 6) {\n      dispatch(\n        setError(\n          'Password should be at least 6 characters and match each other'\n        )\n      );\n      return false;\n    }\n    dispatch(removeError());\n    return true;\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startRegister(email, password, name));\n    }\n  };\n\n  const { msgError } = useSelector((state) => state.ui);\n\n  return (\n    <div className='auth-container'>\n      <div className='auth-container_div'>\n        <h3 className='auth-container_title'>Sign up to CalendarApp</h3>\n        <form className='auth-container_form ' onSubmit={handleRegister}>\n          <input\n            className='auth-container_input'\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={handleInputChange}\n            autoComplete='off'\n          />\n          {msgError === 'Name is required' && (\n            <p className='auth__alert-error'>{msgError}</p>\n          )}\n          <input\n            className='auth-container_input'\n            type='email'\n            placeholder='Email'\n            name='email'\n            value={email}\n            onChange={handleInputChange}\n          />\n          {msgError === 'Email is not valid' && (\n            <p className='auth__alert-error'>{msgError}</p>\n          )}\n\n          <input\n            className='auth-container_input'\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={handleInputChange}\n          />\n\n          <input\n            className='auth-container_input'\n            type='password'\n            placeholder='Repeat password'\n            name='password2'\n            value={password2}\n            onChange={handleInputChange}\n          />\n          {msgError ===\n            'Password should be at least 6 characters and match each other' && (\n            <p className='auth__alert-error'>{msgError}</p>\n          )}\n          <button className='auth-btn pointer ' type='submit'>\n            Sign up\n          </button>\n        </form>\n        <div className='auth-container_div-redirect '>\n          <p>You have an account?</p>\n          <Link className='links-auth pointer' to='/auth/login'>\n            Sign in\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path='/auth/login' component={LoginScreen} />\n        <Route exact path='/auth/register' component={RegisterScreen} />\n        <Redirect to='/auth/login' />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({ isLogged, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isLogged ? <Component {...props} /> : <Redirect to='/auth/login' />\n      }\n    />\n  );\n};\n\nPrivateRoute.protoTypes = {\n  isLogged: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({ isLogged, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isLogged ? <Redirect to='/' /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.protoTypes = {\n  isLogged: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const LoadingScreen = () => {\n  return (\n    <div className='auth__main-loading'>\n      <p className='auth_title-loading'> Loading</p>\n      <div className='auth_container_spinner'>\n        <div className='yellow'></div>\n        <div className='red'></div>\n        <div className='blue'></div>\n        <div className='violet'></div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\n\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../components/actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { LoadingScreen } from '../components/auth/LoadingScreen';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  if (checking) {\n    return <LoadingScreen />;\n  }\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute path='/auth' component={AuthRouter} isLogged={!!uid} />\n\n          <PrivateRoute\n            exact\n            path='/'\n            component={CalendarScreen}\n            isLogged={!!uid}\n          />\n          <Redirect to='/auth/login' />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from '../../types/types';\n\nconst inicialState = {\n  modalOpen: false,\n};\nexport const uiReducer = (state = inicialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: action.payload,\n      };\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../../types/types';\n\n// {\n//   id: new Date().getTime(),\n//   title: 'cumple',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'hours').toDate(),\n//   notes: 'Comprar torta',\n//   user: {\n//     id: '123',\n//     name: 'Alexa',\n//   },\n// },\n\nconst inicialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = inicialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: { ...action.payload },\n      };\n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n\n    case types.eventUpdate: {\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n    }\n\n    case types.eventDelete: {\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== action.payload.id),\n        activeEvent: null,\n      };\n    }\n\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n\n    case types.eventLogout:\n      return {\n        ...inicialState,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name : null\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        checking: false,\n        ...action.payload,\n      };\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\nexport const rootReducers = combineReducers({\n  ui: uiReducer,\n  auth: authReducer,\n  calendar: calendarReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { rootReducers } from '../reducers/rootReducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './components/store/store';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles/styles.scss';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}